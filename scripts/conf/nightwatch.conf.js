/***
 * Excerpted from "Programming WebRTC",
 * published by The Pragmatic Bookshelf.
 * Copyrights apply to this code. It may not be used to create training material,
 * courses, books, articles, and the like. Contact us if you are in doubt.
 * We make no guarantees that this code is fit for any purpose.
 * Visit https://pragprog.com/titles/ksrtc for more book information.
***/
// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  src_folders: [
    'demos/tests'
  ],

  // See https://nightwatchjs.org/guide/working-with-page-objects/
  page_objects_path: '',

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-commands
  custom_commands_path: '',

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-assertions
  custom_assertions_path: '',

  // See https://nightwatchjs.org/guide/#external-globals
  globals_path: '',

  webdriver: {},

  test_settings: {
    default: {
      disable_error_log: false,
      launch_url: 'https://localhost:3000',

      screenshots: {
        enabled: false,
        path: 'screens',
        on_failure: true
      },

      capabilities: {
        browserName : 'firefox',
        alwaysMatch: {
          // Enable this if you encounter unexpected SSL certificate errors in Firefox
          acceptInsecureCerts: true,
          'moz:firefoxOptions': {
            args: [
              // '-headless',
              // '-verbose'
            ],
            prefs: {
              "media.navigator.permission.disabled": true,
              "media.navigator.streams.fake": true
            }
          }
        }
      },

      webdriver: {
        start_process: true,
        server_path: ''
      }
    },

    safari: {
      capabilities : {
        browserName : 'safari',
        alwaysMatch: {
          acceptInsecureCerts: false
        }
      },
      webdriver: {
        start_process: true,
        server_path: ''
      }
    },

    firefox: {
      capabilities : {
        browserName : 'firefox',
        acceptInsecureCerts: true,
        'moz:firefoxOptions': {
          args: [
            // '-headless',
            // '-verbose'
          ],
          prefs: {
            "media.navigator.permission.disabled": true,
            "media.navigator.streams.fake": true
          }
        }
      },
      webdriver: {
        start_process: true,
        server_path: '',
        host: '127.0.0.1',
        port: 4444,
        cli_args: [
          // very verbose geckodriver logs
          // '-vv'
        ]
      }
    },

    chromeActive: {
      globals: {
        'activePeer': true
      },
      capabilities : {
        browserName : 'chrome',
        'goog:chromeOptions' : {
          w3c: true,
          args: [
            '--ignore-certificate-errors',
            '--use-fake-ui-for-media-stream',
            '--use-fake-device-for-media-stream'
          ]
        }
      },
      webdriver: {
        start_process: true,
        port: 9515,
        server_path: '',
        cli_args: [
          // --verbose
        ]
      }
    },
    chromePassive: {
      globals: {
        'activePeer': false
      },
      capabilities : {
        browserName : 'chrome',
        'goog:chromeOptions' : {
          w3c: true,
          args: [
            '--ignore-certificate-errors',
            '--use-fake-ui-for-media-stream',
            '--use-fake-device-for-media-stream'
          ]
        }
      },
      webdriver: {
        start_process: true,
        port: 9514,
        server_path: '',
        cli_args: [
          // --verbose
        ]
      }
    },

    firefoxActive: {
      globals: {
        'activePeer': true
      },
      capabilities : {
        browserName : 'firefox',
        acceptInsecureCerts: true,
        'moz:firefoxOptions': {
          args: [
            // '-headless',
            // '-verbose'
          ],
          prefs: {
            "media.navigator.permission.disabled": true,
            "media.navigator.streams.fake": true
          }
        }
      },
      webdriver: {
        start_process: true,
        server_path: '',
        host: '127.0.0.1',
        port: 4445,
        cli_args: [
          // very verbose geckodriver logs
          // '-vv'
        ]
      }
    },
    firefoxPassive: {
      globals: {
        'activePeer': false
      },
      capabilities: {
        browserName : 'firefox',
        acceptInsecureCerts: true,
        'moz:firefoxOptions': {
          args: [
            // '-headless',
            // '-verbose'
          ],
          prefs: {
            "media.navigator.permission.disabled": true,
            "media.navigator.streams.fake": true
          }
        }
      },
      webdriver: {
        start_process: true,
        server_path: '',
        host: '127.0.0.1',
        port: 4444,
        cli_args: [
          // very verbose geckodriver logs
          // '-vv'
        ]
      }
    }
  }
};
